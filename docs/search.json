[{"path":[]},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement robert.schlegel@imev-mer.fr. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 FjordLight authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"FjordLight Example","text":"FjordLight package built explicitly facilitate use Arctic fjord PAR dataset developed via FACE-project extension work Gattuso et al. (2020). FACE-received funding European Union’s Horizon 2020 research innovation programme grant agreement . 869154. one find range examples help clarify useful order functions workflow. examples also available within help files given functions.","code":"library(FjordLight) library(raster) #> Loading required package: sp"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"caveat-emptor","dir":"Articles","previous_headings":"","what":"Caveat emptor","title":"FjordLight Example","text":"64 GB RAM (typical desktop) computer problem loading data, even extensive fjords. 4 GB (typical laptop) can handle smaller fjords: ‘kong’, ‘young’, ‘nuup’. However, need monthly PARbottom KPAR time series, computer able load fjords. case, calling fl_LoadFjord() function, set TS argument FALSE (default value).","code":""},{"path":[]},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"list-of-available-fjords","dir":"Articles","previous_headings":"Workflow","what":"List of available fjords","title":"FjordLight Example","text":"","code":"fl_ListFjords()"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"download-a-fjord","dir":"Articles","previous_headings":"Workflow","what":"Download a fjord","title":"FjordLight Example","text":"save file computer: purposes vignette use small toy dataset included within FJordLight:","code":"# Choose a fjord from the list above fjord <- \"kong\"  # Note: this will require that a folder named 'data' exists in your current working directory # One may see one's working directory written in small text next to the version of R in the console pane # If the file has already been downloaded a message will be shown fl_DownloadFjord(fjord, dirdata = \"data\") # Chose to load all of the monthly bottom PAR values or not WANT_TIME_SERIES <- TRUE  # Load the data fjord <- \"test\" fjorddata <- fl_LoadFjord(fjord, dirdata = system.file(\"extdata\", package = \"FjordLight\"), TS = WANT_TIME_SERIES) str(fjorddata, list.len = 15) #> List of 31 #>  $ name                  : chr \"test\" #>  $ longitude             : num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  $ latitude              : num [1:6(1d)] 78.9 78.9 78.9 79 79 ... #>  $ Months                : num [1:8(1d)] 3 4 5 6 7 8 9 10 #>  $ Years                 : num [1:20(1d)] 2003 2004 2005 2006 2007 ... #>  $ irradianceLevel       : num [1:101(1d)] 0.001 0.0011 0.0012 0.00132 0.00145 ... #>  $ depth                 : num [1:7, 1:6] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ elevation             : num [1:7, 1:6] NaN NaN NaN 87.8 400.1 ... #>  $ area                  : num [1:7, 1:6] 0.00983 0.00983 0.00983 0.00983 0.00983 ... #>  $ AreaOfCoastalZone     : num 205 #>  $ AreaOfShallowZone     : num 106 #>  $ site_average_longitude: num 11.8 #>  $ site_average_latitude : num 79 #>  $ MonthlyPARbottom      : num [1:7, 1:6, 1:8, 1:20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ ClimPARbottom         : num [1:7, 1:6, 1:8] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>   [list output truncated]"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"get-geographic-parameters","dir":"Articles","previous_headings":"Workflow","what":"Get geographic parameters","title":"FjordLight Example","text":"","code":"flget_geoparameters(fjorddata) #> site_average_longitude  site_average_latitude      AreaOfCoastalZone  #>                11.8450                78.9800               205.4384  #>      AreaOfShallowZone  #>               105.7447"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"get-bathymetry","dir":"Articles","previous_headings":"Workflow","what":"Get bathymetry","title":"FjordLight Example","text":"","code":"# All depths (what = \"o\" ; o for Ocean), as raster all_bathy <- flget_bathymetry(fjorddata, what = \"o\", mode = \"raster\", PLOT = TRUE) # Coastal zone [0-200m] (what = \"c\" ; c for Coastal), as raster coastal_bathy <- flget_bathymetry(fjorddata, what = \"c\", mode = \"raster\", PLOT = TRUE) # Shallow zone [0-50m] (what = \"sl\" ; s for Shallow, l to add land), as raster shallow_land <- flget_bathymetry(fjorddata, what = \"sl\", mode = \"raster\", PLOT = TRUE) # Just land; note the difference in colour palette just_land <- flget_bathymetry(fjorddata, what = \"l\", mode = \"raster\", PLOT = TRUE) # As a data.frame (mode = \"df\" : longitude, latitude, depth) sea <- flget_bathymetry(fjorddata, what = \"s\", mode = \"df\", PLOT = FALSE) cz <- flget_bathymetry(fjorddata, what = \"c\", mode = \"df\", PLOT = FALSE)  # you may add letter \"l\" if you want land elevation sealand <- flget_bathymetry(fjorddata, what = \"sl\", mode = \"df\")  # Example of structure str(sealand) #> 'data.frame':    23 obs. of  3 variables: #>  $ longitude: num  11.6 11.9 12.3 11.4 11.6 ... #>  $ latitude : num  79.1 78.9 79 78.9 78.9 ... #>  $ depth    : num  -48.3 -2 -27.2 32.9 346.2 ..."},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"get-climatologies-of-par0m-kpar-and-parbottom","dir":"Articles","previous_headings":"Workflow","what":"Get climatologies of PAR0m, Kpar, and PARbottom","title":"FjordLight Example","text":"want data data.frame:","code":"# PAR0m and PARbottom for July P07 <- flget_climatology(fjorddata, optics = \"PAR0m\", period = \"Clim\", month = 7, PLOT = TRUE) print(P07) #> class      : RasterLayer  #> dimensions : 6, 7, 42  (nrow, ncol, ncell) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : PAR0m_Jul  #> values     : 28.56959, 31.37006  (min, max) Pk7 <- flget_climatology(fjorddata, optics = \"Kpar\", period = \"Clim\", month = 7, PLOT = TRUE) print(Pk7) #> class      : RasterLayer  #> dimensions : 6, 7, 42  (nrow, ncol, ncell) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : Kpar_Jul  #> values     : 0.2326143, 0.6075656  (min, max) Pb7 <- flget_climatology(fjorddata, optics = \"PARbottom\", period = \"Clim\", month = 7, PLOT = TRUE) print(Pb7) #> class      : RasterLayer  #> dimensions : 6, 7, 42  (nrow, ncol, ncell) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : PARbottom_Jul  #> values     : 2.523117e-23, 14.72211  (min, max)  # PARbottom Global PbG <- flget_climatology(fjorddata, optics = \"PARbottom\", period = \"Global\", PLOT = TRUE) print(PbG) #> class      : RasterLayer  #> dimensions : 6, 7, 42  (nrow, ncol, ncell) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : PARbottom_Global  #> values     : 1.925715e-12, 10.01818  (min, max)  # PAR0m, Kpar, and PARbottom for year 2012 as 3 columns data.frame P02012 <- flget_climatology(fjorddata, optics = \"PAR0m\", period = \"Yearly\", year = 2012, mode = \"df\") k2012 <- flget_climatology(fjorddata, optics = \"Kpar\", period = \"Yearly\", year = 2012, mode = \"df\") Pb2012 <- flget_climatology(fjorddata, optics = \"PARbottom\", period = \"Yearly\", year = 2012, mode = \"df\") head(Pb2012) #>   longitude latitude PARbottom_2012 #> 1  11.17611 79.07557            NaN #> 2  11.40711 79.07557   8.655995e-16 #> 3  11.63811 79.07557   7.734963e-04 #> 4  11.86911 79.07557            NaN #> 5  12.10011 79.07557            NaN #> 6  12.33111 79.07557            NaN # first get pixels area area <- flget_area(fjorddata, mode = \"df\")  # Then bind the data frames and remove rows with missing values PAR_area <- cbind(sea, area[3], P02012[3], k2012[3], Pb2012[3]) PAR_area <- PAR_area[complete.cases(PAR_area),] head(PAR_area) #>    longitude latitude     depth PixArea_km2 PAR0m_2012 Kpar_2012 PARbottom_2012 #> 18  11.63811 79.07557 -48.33667 0.009640369   18.10831 0.2715354   3.607185e-18 #> 34  12.33111 78.98727 -27.23905 0.009717256   17.69369 0.4005297   1.749926e-05"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"get-monthly-time-series-of-parbottom","dir":"Articles","previous_headings":"Workflow","what":"Get monthly time series of PARbottom","title":"FjordLight Example","text":"","code":"# Years 2003 to 2004 - months July to August mts <- flget_PARbottomMonthlyTS(fjorddata, month = 7:8, year = 2003:2004, PLOT = TRUE) print(mts) #> class      : RasterStack  #> dimensions : 6, 7, 42, 4  (nrow, ncol, ncell, nlayers) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> names      : MonthlyPARbottom.2003.07, MonthlyPARbottom.2003.08, MonthlyPARbottom.2004.07, MonthlyPARbottom.2004.08  #> min values :             1.068990e-31,             7.400259e-34,             4.697414e-36,             1.141482e-26  #> max values :                14.620255,                 7.802111,                11.695462,                 6.851761  # Or as a data.frame mts_2003 <- flget_PARbottomMonthlyTS(fjorddata, year = 2003, PLOT = FALSE, mode = \"df\") head(mts_2003) #>   longitude latitude MonthlyPARbottom.2003.03 MonthlyPARbottom.2003.04 #> 1  11.17611 79.07557                      NaN                      NaN #> 2  11.40711 79.07557             2.639961e-23             7.544333e-21 #> 3  11.63811 79.07557             2.984594e-05             3.859223e-04 #> 4  11.86911 79.07557                      NaN                      NaN #> 5  12.10011 79.07557                      NaN                      NaN #> 6  12.33111 79.07557                      NaN                      NaN #>   MonthlyPARbottom.2003.05 MonthlyPARbottom.2003.06 MonthlyPARbottom.2003.07 #> 1                      NaN                      NaN                      NaN #> 2             1.394341e-18             1.029682e-16             1.952332e-18 #> 3             4.468472e-04             1.784186e-03             5.850928e-04 #> 4                      NaN                      NaN                      NaN #> 5                      NaN                      NaN                      NaN #> 6                      NaN                      NaN                      NaN #>   MonthlyPARbottom.2003.08 MonthlyPARbottom.2003.09 #> 1                      NaN                      NaN #> 2             1.323424e-23             3.074024e-14 #> 3             8.365609e-05             1.874313e-04 #> 4                      NaN                      NaN #> 5                      NaN                      NaN #> 6                      NaN                      NaN # All months - all years - as data.frame:    # columns = months (8, March to October) * years (20, 2003 to 2022) + 2 (lon lat) = 162 # NB: This may be too large for some laptops, proceed with caution mts_full <- flget_PARbottomMonthlyTS(fjorddata, mode = \"df\", PLOT = FALSE)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"get-monthly-time-series-of-kpar","dir":"Articles","previous_headings":"Workflow","what":"Get monthly time series of KPAR","title":"FjordLight Example","text":"addendum original monthly bottom PAR data, data KPAR spatial temporal resolution made available separate set files. download work files one follows similar workflow shown : purposes vignette use KPAR test file included package. Note files contain global attributes supplement original bottom PAR files. data loaded may worked way bottom PAR monthly time series data changing use function flget_PARbottomMonthlyTS() flget_KPARMonthlyTS().","code":"# Choose a fjord from the possible options fjord <- \"kong\"  # Note: this will require that a folder named 'data' exists in your current working directory # One may see one's working directory written in small text next to the version of R in the console pane # If the file has already been downloaded a message will be shown fl_DownloadFjord(fjord, layer = \"K_PAR\" dirdata = \"data\") # Chose to load all of the monthly bottom PAR values or not WANT_TIME_SERIES <- TRUE  # Load the data fjord <- \"test\" fjorddata_KPAR <- fl_LoadFjord(fjord, layer = \"K_PAR\", dirdata = system.file(\"extdata\", package = \"FjordLight\"), TS = WANT_TIME_SERIES) str(fjorddata_KPAR, list.len = 15) #> List of 8 #>  $ name           : chr \"test\" #>  $ longitude      : num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  $ latitude       : num [1:6(1d)] 78.9 78.9 78.9 79 79 ... #>  $ Months         : num [1:8(1d)] 3 4 5 6 7 8 9 10 #>  $ Years          : num [1:20(1d)] 2003 2004 2005 2006 2007 ... #>  $ MonthlyKpar    : num [1:7, 1:6, 1:8, 1:20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ vars_attributes:List of 5 #>   ..$ longitude  :List of 2 #>   .. ..$ units    : chr \"deg.E\" #>   .. ..$ long_name: chr \"longitude\" #>   ..$ latitude   :List of 2 #>   .. ..$ units    : chr \"deg.N\" #>   .. ..$ long_name: chr \"latitude\" #>   ..$ Months     :List of 2 #>   .. ..$ units    : chr \"month_number\" #>   .. ..$ long_name: chr \"Months\" #>   ..$ Years      :List of 1 #>   .. ..$ long_name: chr \"Years\" #>   ..$ MonthlyKpar:List of 3 #>   .. ..$ units     : chr \"m-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"monthly attenuation coefficient for PAR\" #>  $ glob_attributes: list() # Years 2003 to 2004 - months July to August mts_KPAR <- flget_KPARMonthlyTS(fjorddata_KPAR, month = 7:8, year = 2003:2004, PLOT = TRUE) print(mts) #> class      : RasterStack  #> dimensions : 6, 7, 42, 4  (nrow, ncol, ncell, nlayers) #> resolution : 0.231, 0.04415  (x, y) #> extent     : 11.06061, 12.67761, 78.83274, 79.09764  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> names      : MonthlyPARbottom.2003.07, MonthlyPARbottom.2003.08, MonthlyPARbottom.2004.07, MonthlyPARbottom.2004.08  #> min values :             1.068990e-31,             7.400259e-34,             4.697414e-36,             1.141482e-26  #> max values :                14.620255,                 7.802111,                11.695462,                 6.851761  # Or as a data.frame mts_KPAR_2003 <- flget_KPARMonthlyTS(fjorddata_KPAR, year = 2003, PLOT = FALSE, mode = \"df\") head(mts_2003) #>   longitude latitude MonthlyPARbottom.2003.03 MonthlyPARbottom.2003.04 #> 1  11.17611 79.07557                      NaN                      NaN #> 2  11.40711 79.07557             2.639961e-23             7.544333e-21 #> 3  11.63811 79.07557             2.984594e-05             3.859223e-04 #> 4  11.86911 79.07557                      NaN                      NaN #> 5  12.10011 79.07557                      NaN                      NaN #> 6  12.33111 79.07557                      NaN                      NaN #>   MonthlyPARbottom.2003.05 MonthlyPARbottom.2003.06 MonthlyPARbottom.2003.07 #> 1                      NaN                      NaN                      NaN #> 2             1.394341e-18             1.029682e-16             1.952332e-18 #> 3             4.468472e-04             1.784186e-03             5.850928e-04 #> 4                      NaN                      NaN                      NaN #> 5                      NaN                      NaN                      NaN #> 6                      NaN                      NaN                      NaN #>   MonthlyPARbottom.2003.08 MonthlyPARbottom.2003.09 #> 1                      NaN                      NaN #> 2             1.323424e-23             3.074024e-14 #> 3             8.365609e-05             1.874313e-04 #> 4                      NaN                      NaN #> 5                      NaN                      NaN #> 6                      NaN                      NaN"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"standard-deviations-for-climatologies","dir":"Articles","previous_headings":"Workflow","what":"Standard deviations for climatologies","title":"FjordLight Example","text":"Also appended original bottom PAR dataset files document standard deviation (SD) monthly annual climatologies. may downloaded/loaded using argument layer = \"ClimSD\" layer = \"YearlySD\" corresponding functions seen : examples , vignette proceed pre-packaged example files. Note however time series data files, need specificy argument (default behaviour FALSE). extract work monthly climatology SD data one may follow steps:      Likewise, yearly climatology SD data:","code":"# Choose a fjord from the possible options fjord <- \"kong\"  # Note: this will require that a folder named 'data' exists in your current working directory # One may see one's working directory written in small text next to the version of R in the console pane # If the file has already been downloaded a message will be shown fl_DownloadFjord(fjord, layer = \"ClimSD\", dirdata = \"data\") fl_DownloadFjord(fjord, layer = \"YearlySD\", dirdata = \"data\") # Monthly climatology SD fjorddata_ClimSD <- fl_LoadFjord(fjord, layer = \"ClimSD\", dirdata = system.file(\"extdata\", package = \"FjordLight\")) str(fjorddata_ClimSD, list.len = 15) #> List of 9 #>  $ name           : chr \"test\" #>  $ longitude      : num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  $ latitude       : num [1:6(1d)] 78.9 78.9 78.9 79 79 ... #>  $ Months         : num [1:8(1d)] 3 4 5 6 7 8 9 10 #>  $ ClimPARbottomSD: num [1:7, 1:6, 1:8] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ ClimPAR0mSD    : num [1:7, 1:6, 1:8] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ ClimKparSD     : num [1:7, 1:6, 1:8] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ vars_attributes:List of 6 #>   ..$ longitude      :List of 2 #>   .. ..$ units    : chr \"deg.E\" #>   .. ..$ long_name: chr \"longitude\" #>   ..$ latitude       :List of 2 #>   .. ..$ units    : chr \"deg.N\" #>   .. ..$ long_name: chr \"latitude\" #>   ..$ Months         :List of 2 #>   .. ..$ units    : chr \"month_number\" #>   .. ..$ long_name: chr \"Months\" #>   ..$ ClimPARbottomSD:List of 3 #>   .. ..$ units     : chr \"mol photons m-2 day-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"monthly climatology of standard deviation of PAR at Sea floor\" #>   ..$ ClimPAR0mSD    :List of 3 #>   .. ..$ units     : chr \"mol photons m-2 day-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"monthly climatology of standard deviation of PAR under Sea surface\" #>   ..$ ClimKparSD     :List of 3 #>   .. ..$ units     : chr \"m-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"monthly climatology of standard deviation of attenuation coefficient for PAR\" #>  $ glob_attributes: list() fjorddata_YearlySD <- fl_LoadFjord(fjord, layer = \"YearlySD\", dirdata = system.file(\"extdata\", package = \"FjordLight\")) str(fjorddata_YearlySD, list.len = 15) #> List of 9 #>  $ name             : chr \"test\" #>  $ longitude        : num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  $ latitude         : num [1:6(1d)] 78.9 78.9 78.9 79 79 ... #>  $ Years            : num [1:20(1d)] 2003 2004 2005 2006 2007 ... #>  $ YearlyPARbottomSD: num [1:7, 1:6, 1:20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ YearlyPAR0mSD    : num [1:7, 1:6, 1:20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ YearlyKparSD     : num [1:7, 1:6, 1:20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ... #>  $ vars_attributes  :List of 6 #>   ..$ longitude        :List of 2 #>   .. ..$ units    : chr \"deg.E\" #>   .. ..$ long_name: chr \"longitude\" #>   ..$ latitude         :List of 2 #>   .. ..$ units    : chr \"deg.N\" #>   .. ..$ long_name: chr \"latitude\" #>   ..$ Years            :List of 1 #>   .. ..$ long_name: chr \"Years\" #>   ..$ YearlyPARbottomSD:List of 3 #>   .. ..$ units     : chr \"mol photons m-2 day-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"yearly climatology of standard deviation of PAR at Sea floor\" #>   ..$ YearlyPAR0mSD    :List of 3 #>   .. ..$ units     : chr \"mol photons m-2 day-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"yearly climatology of standard deviation of PAR under Sea surface\" #>   ..$ YearlyKparSD     :List of 3 #>   .. ..$ units     : chr \"m-1\" #>   .. ..$ _FillValue: num NaN #>   .. ..$ long_name : chr \"yearly climatology of standard deviation of attenuation coefficient for PAR\" #>  $ glob_attributes  : list() # Determine coordinates lon <- fjorddata$longitude lat <- fjorddata$latitude str(lon); str(lat) #>  num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  num [1:6(1d)] 78.9 78.9 78.9 79 79 ...  # Select a month month <- 8 # August im <- which(fjorddata$Months == month) print(im) #> [1] 6  # PAR0m Standard Deviation PAR0mSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_ClimSD$ClimPAR0mSD[, , im])) plot(PAR0mSD, main = paste(\"PAR0m StDev\", month.abb[month])) # kdpar Standard Deviation KparSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_ClimSD$ClimKparSD[, , im])) plot(KparSD, main = paste(\"Kpar StDev\", month.abb[month])) # PARbottom Standard Deviation PARbottomSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_ClimSD$ClimPARbottomSD[, , im])) plot(PARbottomSD, main = paste(\"PARbottom StDev\", month.abb[month])) # PARbottom PAR0m <- flget_climatology(fjorddata, optics = \"PAR0m\", period = \"Clim\", month = month, PLOT = TRUE) VarCoef <- PAR0mSD / PAR0m plot(VarCoef, main = \"PAR0m Coefficient of Variation\") # Determine coordinates lon <- fjorddata$longitude lat <- fjorddata$latitude str(lon); str(lat) #>  num [1:7(1d)] 11.2 11.4 11.6 11.9 12.1 ... #>  num [1:6(1d)] 78.9 78.9 78.9 79 79 ...  # Choose a year year <- 2007 iy <- which(fjorddata$Years == year) print(iy) #> [1] 5  # PAR0m Standard Deviation PAR0mSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_YearlySD$YearlyPAR0mSD[, , iy])) plot(PAR0mSD, main = paste(\"PAR0m StDev\", year)) # kdpar Standard Deviation KparSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_YearlySD$YearlyKparSD[, , iy])) plot(KparSD, main = paste(\"Kpar StDev\", year)) # PARbottom Standard Deviation PARbottomSD <- raster::raster(list(x = lon, y = lat, z = fjorddata_YearlySD$YearlyPARbottomSD[, , iy])) plot(PARbottomSD, main = paste(\"PARbottom StDev\", year)) # PARbottom PAR0m <- flget_climatology(fjorddata, optics = \"PAR0m\", period = \"Yearly\", year = year, PLOT = TRUE) VarCoef <- PAR0mSD / PAR0m plot(VarCoef, main = \"PAR0m Coefficient of Variation\")"},{"path":"https://face-it-project.github.io/FjordLight/index.html/articles/fl_example.html","id":"p-functions","dir":"Articles","previous_headings":"Workflow","what":"P-functions","title":"FjordLight Example","text":"","code":"# One may create their own functions fG <- flget_Pfunction(fjorddata, type = \"coastal\", period = \"Global\", plot = FALSE) # Then you can use it; for instance : irradiance_levels <- c(0.1, 1, 10) fG(irradiance_levels) #> [1] 17.762922  9.656415  1.905183  # Or load the pre-calculated values as a 2 column data.frame f2012 <- flget_Pfunction(fjorddata, type = \"coastal\", period = \"Yearly\", year = 2012, mode = \"df\") str(f2012) #> 'data.frame':    101 obs. of  2 variables: #>  $ irradianceLevel: num  0.001 0.0011 0.0012 0.00132 0.00145 ... #>  $ Pcoastal_2012  : num  31.2 31 30.7 30.5 30.3 ...  # Plot P-functions fGlob <- flget_Pfunction(fjorddata, type = \"coastal\", period = \"Global\", PLOT = TRUE, lty = 1, col = 1, lwd = 2,                           Main = paste(fjord, \"coastal P-functions\"), ylim = c(0, 50))"},{"path":[]},{"path":"https://face-it-project.github.io/FjordLight/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernard Gentili. Author. Jean-Pierre Gattuso. Author. Robert W. Schlegel. Author, maintainer.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gentili B, Gattuso J, Schlegel RW (2024). FjordLight: Available Light Within Water Column Seafloor Arctic Fjords. R package version 1.0.0, https://CRAN.R-project.org/package=FjordLight.","code":"@Manual{,   title = {{FjordLight}: Available Light Within the Water Column and on the Seafloor of Arctic Fjords},   author = {Bernard Gentili and Jean-Pierre Gattuso and Robert W. Schlegel},   year = {2024},   note = {R package version 1.0.0},   url = {https://CRAN.R-project.org/package=FjordLight}, }"},{"path":"https://face-it-project.github.io/FjordLight/index.html/index.html","id":"fjordlight-","dir":"","previous_headings":"","what":"Available Light Within the Water Column and on the Seafloor of Arctic Fjords","title":"Available Light Within the Water Column and on the Seafloor of Arctic Fjords","text":"package designed aid user accessing working Arctic fjord PAR data product created FACE-. open access ESSD paper contains details creation data provides examples use. full range examples use package, please see vignette. package may installed via CRAN using: install.packages(\"FjordLight\") via GitHub using: remotes::install_github(\"FACE--project/FjordLight\")","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Available Light Within the Water Column and on the Seafloor of Arctic Fjords","text":"Please note FjordLight project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colour palette from blues to reds. — cs_BuYlRd","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"function create lovely, evenly spaced colour palette.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"","code":"cs_BuYlRd(n)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"n number colours blue red return.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"character vector hexadecimal values.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_BuYlRd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colour palette from blues to reds. — cs_BuYlRd","text":"","code":"cs_BuYlRd(10) #>  [1] \"#313695\" \"#4A7BB7\" \"#80B7D6\" \"#BDE2EE\" \"#EEF8DF\" \"#FEEEA5\" \"#FDBF71\" #>  [8] \"#F67B4A\" \"#DA372A\" \"#A50026\""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colour palette of blues. — cs_blue","title":"Create a colour palette of blues. — cs_blue","text":"function create lovely, evenly spaced colour palette.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colour palette of blues. — cs_blue","text":"","code":"cs_blue(n)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colour palette of blues. — cs_blue","text":"n number colours blue return.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colour palette of blues. — cs_blue","text":"character vector hexadecimal values.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a colour palette of blues. — cs_blue","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colour palette of blues. — cs_blue","text":"","code":"cs_blue(10) #>  [1] \"#213F77\" \"#2154A2\" \"#1B69D0\" \"#0080FF\" \"#0080FF\" \"#6093FF\" \"#89A8FF\" #>  [8] \"#ABBDFF\" \"#C8D2FF\" \"#E4E8FF\""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colour palette from blues to yellows. — cs_blye","title":"Create a colour palette from blues to yellows. — cs_blye","text":"function create lovely, evenly spaced colour palette.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colour palette from blues to yellows. — cs_blye","text":"","code":"cs_blye(n)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colour palette from blues to yellows. — cs_blye","text":"n number colours blue yellow return.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colour palette from blues to yellows. — cs_blye","text":"character vector hexadecimal values.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a colour palette from blues to yellows. — cs_blye","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/cs_blye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colour palette from blues to yellows. — cs_blye","text":"","code":"cs_blye(10) #>  [1] \"#0080FF\" \"#4D8CEC\" \"#8299D8\" \"#9DA6C4\" \"#B0B4AF\" \"#C0C29A\" \"#CED183\" #>  [8] \"#DAE068\" \"#E5F03D\" \"#EEFF00\""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":null,"dir":"Reference","previous_headings":"","what":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"functions queries FTP server NetCDF files stored. retrieve one file matches name provided via fjord argument. Note files can multiple gigabytes size.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"","code":"fl_DownloadFjord(fjord, layer = \"PAR_B\", dirdata = NULL)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"fjord Expects character vector one 8 available fjords. See fl_ListFjords list possible choices. layer layer data user wants download. default \"PAR_B\" download monthly bottom PAR data, \"K_PAR\" download monthly values light extinction coefficient (.e. K_PAR) water column, \"ClimSD\" download standard deviations monthly climatologies, \"YearlySD\" download standard deviations yearly climatologies. Note monthly K_PAR data chosen, file saved e.g. \"kong_MonthlyKpar.nc\". \"ClimSD\" \"YearlySD\" data also character string appended file name. Whereas PAR_B data saved simply e.g. \"kong.nc\". NB: \"PAR_B\" data contain full list metadata variables. dirdata directory user like download data.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"downloaded NetCDF file contains following variables: bathymetry depth [m] land elevation [m] area PixelArea_km2 [m] AreaOfCoastalZone Surface Sea floor depth 0 200 meters [km2] etc...","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"Bernard Gentili Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_DownloadFjord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download fjord PAR data as NetCDF files. — fl_DownloadFjord","text":"","code":"# Choose a fjord fjord_code <- \"kong\"  # Download it # NB: One should provide a permanent directory when downloading a file. # \\donttest{ fl_DownloadFjord(fjord_code, dirdata = tempdir()) #> ---> downloading fjord kong #> kong.nc downloaded in directory /tmp/RtmpEI9jxs # }"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_ListFjords.html","id":null,"dir":"Reference","previous_headings":"","what":"Simply lists the names of fjords with available data. — fl_ListFjords","title":"Simply lists the names of fjords with available data. — fl_ListFjords","text":"Run determine character vectors use downloading data via fl_DownloadFjord, range uses within FjordLight.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_ListFjords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simply lists the names of fjords with available data. — fl_ListFjords","text":"","code":"fl_ListFjords()"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_ListFjords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simply lists the names of fjords with available data. — fl_ListFjords","text":"list currently 7 different character vectors representing range fjords EU Arctic.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_ListFjords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simply lists the names of fjords with available data. — fl_ListFjords","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_ListFjords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simply lists the names of fjords with available data. — fl_ListFjords","text":"","code":"fl_ListFjords() #> [1] \"disko\" \"is\"    \"kong\"  \"nuup\"  \"por\"   \"stor\"  \"young\""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":null,"dir":"Reference","previous_headings":"","what":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"functions load R environment data within one NetCDF file downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"","code":"fl_LoadFjord(   fjord,   layer = \"PAR_B\",   dirdata = NULL,   TS = FALSE,   verbose = FALSE )"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"fjord Expects character vector one 8 available fjords. See fl_ListFjords list possible choices. layer layer data user wants load. default \"PAR_B\" load monthly bottom PAR data. options, \"K_PAR\" load monthly values light extinction coefficient (.e.  K_PAR) water column, \"ClimSD\" load standard deviation values monthly climatologies, \"YearlySD\" load standard deviation values yearly climatologies. Note PAR_B files contain global values metadata. files supplement PAR_B files. dirdata directory user like load data . TS default, FALSE, prevent function loading monthly bottom PAR values. Instead load global, annual, monthly climatology data. Set TS = TRUE load data, note may extremely large. verbose TRUE FALSE (default) provide verbose output data loading process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"Data loaded complex list format. Containing data fields described documentation fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_LoadFjord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load fjord PAR data from a NetCDF file downloaded by FjordLight. — fl_LoadFjord","text":"","code":"# Choose fjord fjord_code <- \"test\"  # Load global, annual, and monthly climatologies fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # Load ALL data fjorddata_full <- fl_LoadFjord(fjord_code,                                dirdata = system.file(\"extdata\", package = \"FjordLight\"), TS = TRUE)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colour palette for bathymetry plots. — fl_topocolorscale","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"function create lovely, evenly spaced colour palette designed use bathymetry plots.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"","code":"fl_topocolorscale(v)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"v Expects single negative numeric value. maximum depth bathymetry.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"list containing two vectors. First numeric breaks (brks) shown different isobath colours. Second colours (colors) shown. colours given hexadecimal values.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/fl_topocolorscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colour palette for bathymetry plots. — fl_topocolorscale","text":"","code":"fl_topocolorscale(-200) #> $brks #>  [1] -200 -190 -180 -170 -160 -150 -140 -130 -120 -110 -100  -90  -80  -70  -60 #> [16]  -50  -40  -30  -20  -10    0 #>  #> $colors #>  [1] \"#213F77\" \"#21498B\" \"#2153A0\" \"#1E5DB5\" \"#1C67CB\" \"#1171E1\" \"#047CF8\" #>  [8] \"#0080FF\" \"#0080FF\" \"#1985FF\" \"#478EFF\" \"#6997FF\" \"#7CA1FF\" \"#8EABFF\" #> [15] \"#9EB5FF\" \"#AEBFFF\" \"#BCC9FF\" \"#C9D3FF\" \"#D7DEFF\" \"#E4E8FF\" #>"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"functions extract monthly K_PAR data stored within K_PAR NetCDF file downloaded via fl_DownloadFjord. Note data large. one prefer work smaller annual monthly climatology values, instead use flget_climatology. options user like subset data, data format data extracted , user like plot data process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"","code":"flget_KPARMonthlyTS(   fjord,   month = NULL,   year = NULL,   mode = \"raster\",   PLOT = FALSE )"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"fjord Expects object loaded via fl_LoadFjord. NB: loading data one must set argument fl_LoadFjord(..., TS = TRUE). See examples . month monthly values extract. Accepts one many integer values 3 10. values provided, default value NULL passed function, telling load available months data (.e. 3:10). used combination year determine monthly data extract. year years data extract. Currently accepts one many integer values 2003 2022. values provided, default value NULL passed function, telling load available years data (.e. currently 2003:2022). used combination month determine monthly data extract. mode Determines format data loaded R environment. default \"raster\" load data raster format. option \"df\" load data data.frame three columns. PLOT Boolean argument (default = FALSE) tells function user like loaded data plotted .","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"Depending arguments user chooses, function return chosen monthly K_PAR data RasterStack (mode = \"raster\") data.frame (mode = \"df\"). data.frame contain following columns: longitude degree decimals latitude degree decimals PARbottom mol photons m-2 d-1","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_KPARMonthlyTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract monthly K_PAR data from a NetCDF file downloaded by FjordLight. — flget_KPARMonthlyTS","text":"","code":"# Load ALL data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code,                          dirdata = system.file(\"extdata\", package = \"FjordLight\"),                          TS = TRUE, layer = \"K_PAR\")  # Load a small subset as a data.frame mts_single <- flget_KPARMonthlyTS(fjorddata, month = 6, year = 2016, mode = \"df\", PLOT = FALSE)  # Years 2003 to 2004 - months July to August # NB: This may be too large for smaller laptops # \\donttest{ mts_many <- flget_KPARMonthlyTS(fjorddata, month = 7:8, year = 2003:2004, PLOT = FALSE)  # May also plot the data mts_plot <- flget_KPARMonthlyTS(fjorddata, month = 6:9, year = 2010, PLOT = TRUE)  # }  # For more examples: https://face-it-project.github.io/FjordLight/articles/fl_example.html"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"functions extract monthly bottom PAR data stored within NetCDF file downloaded via fl_DownloadFjord. Note data large. one prefer work smaller annual monthly climatology values, instead use flget_climatology. options user like subset data, data format data extracted , user like plot data process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"","code":"flget_PARbottomMonthlyTS(   fjord,   month = NULL,   year = NULL,   mode = \"raster\",   PLOT = FALSE )"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"fjord Expects object loaded via fl_LoadFjord. NB: loading data one must set argument fl_LoadFjord(..., TS = TRUE). See examples . month monthly values extract. Accepts one many integer values 3 10. values provided, default value NULL passed function, telling load available months data (.e. 3:10). used combination year determine monthly data extract. year years data extract. Currently accepts one many integer values 2003 2022. values provided, default value NULL passed function, telling load available years data (.e. currently 2003:2022). used combination month determine monthly data extract. mode Determines format data loaded R environment. default \"raster\" load data raster format. option \"df\" load data data.frame three columns. PLOT Boolean argument (default = FALSE) tells function user like loaded data plotted .","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"Depending arguments user chooses, function return chosen monthly bottom PAR data RasterStack (mode = \"raster\") data.frame (mode = \"df\"). data.frame contain following columns: longitude degree decimals latitude degree decimals PARbottom mol photons m-2 d-1","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_PARbottomMonthlyTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract monthly bottom PAR data from a NetCDF file downloaded by FjordLight. — flget_PARbottomMonthlyTS","text":"","code":"# Load ALL data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code,                           dirdata = system.file(\"extdata\", package = \"FjordLight\"), TS = TRUE)  # Load a small subset as a data.frame mts_single <- flget_PARbottomMonthlyTS(fjorddata, month = 6, year = 2016, mode = \"df\", PLOT = FALSE)  # Years 2003 to 2004 - months July to August # NB: This may be too large for smaller laptops mts_many <- flget_PARbottomMonthlyTS(fjorddata, month = 7:8, year = 2003:2004, PLOT = FALSE)  # May also plot the data # \\donttest{ mts_plot <- flget_PARbottomMonthlyTS(fjorddata, month = 6:9, year = 2010, PLOT = TRUE)  # }  # For more examples: https://face-it-project.github.io/FjordLight/articles/fl_example.html"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"functions conveniently extract p function data stored within NetCDF file downloaded via fl_DownloadFjord. options user like subset data, data format data extracted , user like plot data process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"","code":"flget_Pfunction(   fjord,   type = \"coastal\",   period = \"Global\",   month = NULL,   year = NULL,   mode = \"function\",   PLOT = FALSE,   add = FALSE,   ... )"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"fjord Expects object loaded via fl_LoadFjord. type Whether p function show values coastal zone (< 200 m deep), shallow zone (< 50 m deep). period user determines time period data loaded. load total average values (default) use \"Global\". One may chose instead load \"Yearly\" \"Monthly\" values. Note monthly values represent climatological average month, one month given year. user like one specific month data (available bottom PAR), use flget_PARbottomMonthlyTS. month monthly climatology extract. Accepts integer value 3 10. argument ignored period = \"Yearly\". year yearly average extract. Currently accepts integer value 2003 2022. argument ignored period = \"Monthly\". mode Determines basic process function performs. default mode = \"function\" allow user create function can use determine p curves using input (see examples). access underlying p function data directly set mode = \"df\". PLOT Boolean argument (default = FALSE) tells function user like loaded data plotted . add Boolean (.e. TRUE/FALSE) tell function add p function plot existing plot. See examples . ... Additional arguments may passed flplot_Pfunction, implement using base R plotting functionality.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"Depending arguments user chooses mode, function returned (see examples). two column data.frame: irradianceLevel threshold value [mol photons m-2 d-1] optics_global|year|month column name determined arguments passed optics   either global, year, month, depending period indicated.   values show percent fjord (filtered pixels depth 200 m shallower)   received least amount irradiance indicated irradianceLevel column.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_Pfunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract p function data from a NetCDF file downloaded by FjordLight. — flget_Pfunction","text":"","code":"# Load data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # Create a function fG <- flget_Pfunction(fjorddata, \"shallow\", \"Global\")  # Then use it with specific PAR thresholds irradiance_levels <- c(0.1, 1, 10) fG(irradiance_levels) #> [1] 36.354034 19.763483  3.899282  # As a 2 column data.frame f2012 <- flget_Pfunction(fjorddata, \"shallow\", \"Yearly\", year = 2012, mode = \"df\", PLOT = TRUE)  str(f2012) #> 'data.frame':\t101 obs. of  2 variables: #>  $ irradianceLevel: num  0.001 0.0011 0.0012 0.00132 0.00145 ... #>  $ Pshallow_2012  : num  62.7 62.3 61.8 61.4 61 ...  # Plot a P-function fGlob <- flget_Pfunction(fjorddata, \"coastal\", \"Global\", PLOT = TRUE, lty = 1, col = 1, lwd = 2,                          Main = paste(fjord_code, \"P-functions\"), ylim = c(0, 50))"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"functions conveniently extract pixel surface area data stored within NetCDF file downloaded via fl_DownloadFjord. user may choose load data either raster data.frame formats. useful combine data others, e.g. bathymetry data loaded via fl_DownloadFjord","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"","code":"flget_area(fjord, mode = \"raster\")"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"fjord Expects object loaded via fl_LoadFjord. mode Determines format loaded R environment. default \"raster\" load data raster format. \"3col\" load data data.frame three columns.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"Depending arguments user chooses, function return surface area data RasterLayer (mode = \"raster\") data.frame (mode = \"df\"). data.frame contain following columns: longitude degree decimals latitude degree decimals PixelArea_km2 surface area grid cell [km^2]","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pixel surface area data from a NetCDF file downloaded by FjordLight. — flget_area","text":"","code":"# Load data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # Load area data area <- flget_area(fjorddata, mode = \"df\")"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"functions conveniently extract bathymetry data stored within NetCDF file downloaded via fl_DownloadFjord. options user like subset data, data format data extracted , user like plot data process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"","code":"flget_bathymetry(fjord, what = \"o\", mode = \"raster\", PLOT = FALSE)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"fjord Expects object loaded via fl_LoadFjord. default value \"o\" load \"ocean\" data, meaning filter land pixels. options : \"c\" filters coastal bathymetry data (depth 200 m 0 m), \"s\" filters shallow bathymetry data (depth 50 m 0 m), \"l\" loads land data. One may combine \"o\", \"c\", \"s\", \"l\" (e.g. \"ol\") load sea land data. mode Determines format bathymetry data loaded R environment. default \"raster\" load data raster format. option \"df\" load data data.frame three columns. PLOT Boolean argument (default = FALSE) tells function user like loaded bathymetry /elevation data plotted . NB: argument run user chooses mode = \"raster\".","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"Depending arguments user chooses, function return filtered bathymetry data RasterLayer (mode = \"raster\") data.frame (mode = \"df\"). data.frame contain following columns: longitude degree decimals latitude degree decimals depth metres Note depth column contain elevation (positive) depth (negative) values.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"Bernard Gentili & Robert Schlegel","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_bathymetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and/or plot bathymetry data from a NetCDF file downloaded by FjordLight. — flget_bathymetry","text":"","code":"# Load data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # Shallow data (what = \"s\"; s for shallow) as a data.frame shallow_df <- flget_bathymetry(fjorddata, what = \"s\", mode = \"df\")  # Plot all ocean and land data # \\donttest{ full_bathy <- flget_bathymetry(fjorddata, what = \"ol\", mode = \"raster\", PLOT = TRUE)  # }  # Plot only land data # \\donttest{ land_only <- flget_bathymetry(fjorddata, what = \"l\", mode = \"raster\", PLOT =TRUE)  # }  # For more examples see: https://face-it-project.github.io/FjordLight/articles/fl_example.html"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"functions conveniently extract climatology data stored within NetCDF file downloaded via fl_DownloadFjord. extract monthly bottom PAR data instead one must use flget_PARbottomMonthlyTS. options user like subset data, data format data extracted , user like plot data process.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"","code":"flget_climatology(   fjord,   optics = \"PARbottom\",   period = \"Global\",   month = NULL,   year = NULL,   mode = \"raster\",   PLOT = FALSE )"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"fjord Expects object loaded via fl_LoadFjord. optics PAR variable user like load. option : \"PARbottom\" (default) load bottom PAR values, \"PAR0m\" surface PAR, \"Kpar\" extinction coefficient. period user determines time period data loaded. load total average values (default) use \"Global\". One may chose instead load \"Yearly\" \"Monthly\" values. Note monthly values represent climatological average month, one month given year. user like one specific month data (available bottom PAR), use flget_PARbottomMonthlyTS. month monthly climatology extract. Accepts integer value 3 10. argument ignored period = \"Yearly\". year yearly average extract. Currently accepts integer value 2003 2022. argument ignored period = \"Monthly\". mode Determines format data loaded R environment. default \"raster\" load data raster format. option \"df\" load data data.frame three columns. PLOT Boolean argument (default = FALSE) tells function user like loaded data plotted .","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"Depending arguments user chooses, function return chosen, global, annual, monthly climatology data RasterLayer (mode = \"raster\") data.frame (mode = \"df\"). data.frame contain following columns: longitude degree decimals latitude degree decimals optics_month|year column name determined arguments   optics either month year, depending users choice.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_climatology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract climatology data from a NetCDF file downloaded by FjordLight. — flget_climatology","text":"","code":"# Load data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # PAR0m and PARbottom for July # \\donttest{ P07 <- flget_climatology(fjorddata, \"PAR0m\", \"Clim\", month = 7, PLOT = TRUE)  Pb7 <- flget_climatology(fjorddata, \"PARbottom\", \"Clim\", month = 7, PLOT = TRUE)  # }  # PARbottom Global # \\donttest{ PbG <- flget_climatology(fjorddata, \"PARbottom\", \"Global\", PLOT = TRUE)  # }  # PAR0m and kdpar for year 2012 as 3 columns data frame P02012 <- flget_climatology(fjorddata, \"PAR0m\", \"Yearly\", year = 2012, mode = \"df\") k2012 <- flget_climatology(fjorddata, \"Kpar\", \"Yearly\", year = 2012, mode = \"df\")  # For more examples see: https://face-it-project.github.io/FjordLight/articles/fl_example.html"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"Given NetCDF file downloaded via fl_DownloadFjord, function extracts central longitude latitude site, well surface km^2 shallow zone (< 50 m deep) coastal zone (< 200 m deep).","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"","code":"flget_geoparameters(fjord)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"fjord Expects object loaded via fl_LoadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"named vector containing following items: site_average_longitude central longitude fjord [degree decimals] site_average_latitude central latitude fjord [degree decimals] AreaOfCoastalZone surface area grid cells depth < 200 m [km^2] AreaOfShallowZone surface area grid cells depth < 50 m [km^2]","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flget_geoparameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract geo-parameters from a NetCDF file downloaded by FjordLight. — flget_geoparameters","text":"","code":"# Load data fjord_code <- \"test\" fjorddata <- fl_LoadFjord(fjord_code, dirdata = system.file(\"extdata\", package = \"FjordLight\"))  # Load geo-parameters geo_params <- flget_geoparameters(fjorddata)  # Convert to a data.frame if desired geo_params_df <- t(as.data.frame(geo_params))"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_KPARMonthlyTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","title":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","text":"Internal function used flget_KPARMonthlyTS plots data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_KPARMonthlyTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","text":"","code":"flplot_KPARMonthlyTS(r)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_KPARMonthlyTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","text":"r monthly K_PAR data raster stack format.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_KPARMonthlyTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","text":"base R plot monthly K_PAR data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_KPARMonthlyTS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot monthly K_PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_KPARMonthlyTS","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_PARbottomMonthlyTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","title":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","text":"Internal function used flget_PARbottomMonthlyTS plots data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_PARbottomMonthlyTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","text":"","code":"flplot_PARbottomMonthlyTS(r)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_PARbottomMonthlyTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","text":"r monthly bottom PAR data raster stack format.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_PARbottomMonthlyTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","text":"base R plot monthly bottom PAR data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_PARbottomMonthlyTS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot monthly bottom PAR data extracted from NetCDF files downloaded by FjordLight. — flplot_PARbottomMonthlyTS","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_Pfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","title":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","text":"Internal function used flget_Pfunction plots data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_Pfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","text":"","code":"flplot_Pfunction(irrLev, g, period, month, year, Main = NULL, add = add, ...)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_Pfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","text":"irrLev chosen irradiance thresholds (x-axis). g percent fjord (y-axis) depth 200 m shallower receiving irradiance values (e.g. surface PAR) corresponding threshold (x-axis). period period displayed. .e. yearly monthly. month monthly climatology data, month(s) displayed. year yearly data, year(s) displayed Main title plot. default NULL provide title 'Pfunction yyy'. yyy annual monthly period chosen. add Boolean value TRUE FALSE telling function add plot current plot R Plots panel. ... desired base R plotting functionality.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_Pfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","text":"base R plot yearly monthly p function data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_Pfunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot p function data extracted from NetCDF files downloaded by FjordLight. — flplot_Pfunction","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_bathymetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","title":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","text":"Internal function used flget_bathymetry plots bathymetry data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_bathymetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","text":"","code":"flplot_bathymetry(r, l = NULL, name)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_bathymetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","text":"r bathymetry data raster format. l land data format. name name chosen fjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_bathymetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","text":"base R plot bathymetric data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_bathymetry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot bathymetry data found within NetCDF files downloaded by FjordLight. — flplot_bathymetry","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_climatology.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","title":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","text":"Internal function used flget_climatology plots data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_climatology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","text":"","code":"flplot_climatology(r, l, name, optics, period, month, year)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_climatology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","text":"r yearly/monthly climatology data raster format. l land data format. name name chosen fjord. optics name PAR variable displayed. period period displayed. .e. yearly monthly. month monthly climatology data, month(s) displayed. year yearly data, year(s) displayed","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_climatology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","text":"base R plot yearly monthly climatology data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_climatology.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot annual/monthly climatology data extracted from NetCDF files downloaded by FjordLight. — flplot_climatology","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","title":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","text":"Internal function used flget_bathymetry plots land data contained within NetCDF files downloaded via fl_DownloadFjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","text":"","code":"flplot_land(r, name)"},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","text":"r land data raster format. name name chosen fjord.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","text":"base R plot land data provided.","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/reference/flplot_land.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot land data found within NetCDF files downloaded by FjordLight. — flplot_land","text":"Bernard Gentili","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-100-2024-07-30","dir":"Changelog","previous_headings":"","what":"FjordLight 1.0.0 (2024-07-30)","title":"FjordLight 1.0.0 (2024-07-30)","text":"Updated final stable v1.0.0 release Uploaded CRAN","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-08-2024-04-23","dir":"Changelog","previous_headings":"","what":"FjordLight 0.8 (2024-04-23)","title":"FjordLight 0.8 (2024-04-23)","text":"CRAN release: 2024-04-23 Updated URL download files PANGAEA Uploaded CRAN","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-0719002-2024-02-13","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.1.9002 (2024-02-13)","title":"FjordLight 0.7.1.9002 (2024-02-13)","text":"Added new download load options ‘ClimSD’ YearlySD’ files Corrected minor y-axis label issues Updated expanded examples vignette","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-0719001-2024-01-24","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.1.9001 (2024-01-24)","title":"FjordLight 0.7.1.9001 (2024-01-24)","text":"Added testing file monthly K_PAR data Increasing codecov back 100%","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-0719000-2024-01-22","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.1.9000 (2024-01-22)","title":"FjordLight 0.7.1.9000 (2024-01-22)","text":"Added function access monthly K_PAR data Added function plot monthly K_PAR data","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-071-2024-01-19","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.1 (2024-01-19)","title":"FjordLight 0.7.1 (2024-01-19)","text":"Changed download source LOV FTP PANGAEA Added option download load monthly K_PAR files Updated citation show CRAN","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-070-2023-12-29","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.0 (2023-12-29)","title":"FjordLight 0.7.0 (2023-12-29)","text":"CRAN release: 2023-12-02 Updated logo","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-070-2023-12-05","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.0 (2023-12-05)","title":"FjordLight 0.7.0 (2023-12-05)","text":"CRAN release: 2023-12-02 Published package zenodo","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-070-2023-12-03","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.0 (2023-12-03)","title":"FjordLight 0.7.0 (2023-12-03)","text":"CRAN release: 2023-12-02 Updated logo","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-070-2023-11-30","dir":"Changelog","previous_headings":"","what":"FjordLight 0.7.0 (2023-11-30)","title":"FjordLight 0.7.0 (2023-11-30)","text":"CRAN release: 2023-12-02 Functions now detect available years months data within dataset warn users accordingly","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-062-2023-11-30","dir":"Changelog","previous_headings":"","what":"FjordLight 0.6.2 (2023-11-30)","title":"FjordLight 0.6.2 (2023-11-30)","text":"Changed testing structure function correctly offline Added test.nc bonus file ‘inst/extdata/’","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-062-2023-11-15","dir":"Changelog","previous_headings":"","what":"FjordLight 0.6.2 (2023-11-15)","title":"FjordLight 0.6.2 (2023-11-15)","text":"Changed testing structure prevent future CRAN ERROR issues FTP structure changed","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-061-2023-11-13","dir":"Changelog","previous_headings":"","what":"FjordLight 0.6.1 (2023-11-13)","title":"FjordLight 0.6.1 (2023-11-13)","text":"CRAN release: 2023-11-13 Change download function allow downloading slow connection speed","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-06-2023-11-13","dir":"Changelog","previous_headings":"","what":"FjordLight 0.6 (2023-11-13)","title":"FjordLight 0.6 (2023-11-13)","text":"CRAN release: 2023-11-12 Changes related CRAN process Accepted CRAN","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-059001-2023-11-07","dir":"Changelog","previous_headings":"","what":"FjordLight 0.5.9001 (2023-11-07)","title":"FjordLight 0.5.9001 (2023-11-07)","text":"Getting examples documentation run","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-059000-2023-11-03","dir":"Changelog","previous_headings":"","what":"FjordLight 0.5.9000 (2023-11-03)","title":"FjordLight 0.5.9000 (2023-11-03)","text":"Working getting testing functions covered","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-05-2023-10-27","dir":"Changelog","previous_headings":"","what":"FjordLight 0.5 (2023-10-27)","title":"FjordLight 0.5 (2023-10-27)","text":"Edited logo","code":""},{"path":"https://face-it-project.github.io/FjordLight/index.html/news/index.html","id":"fjordlight-05-2023-10-23","dir":"Changelog","previous_headings":"","what":"FjordLight 0.5 (2023-10-23)","title":"FjordLight 0.5 (2023-10-23)","text":"Base pkgdown site live Added logo Implementing testhat pkgdown.","code":""}]
